//
// Layout styles - affecting the layout of (parts of) the page
// --------------------------------------------------

// GENERATED BY RAILSBRICKS
// the following (as well as '#wrap', see below) is essential for the Footer to be "pushed down the page", see also:
// modules/_footer.scss
html,body {
  height: 100%;
//background-color: #fcfcfc;
}

// GENERATED BY RAILSBRICKS
// the following is a wrapper (as well as the html/body declarations, see above) around all of the page content (except
// for the footer) and is essential for the Footer to
// be "pushed down the page", see also: modules/_footer.scss
#wrap {
  min-height: 100%;
  padding-bottom: 120px;
}

// Semantic styles for Bootstrap grid based elements (containers, rows, columns)

// This is meant for a "wide" row (occupying the full width of the screen); should be used as child of container-fluid;
// so it's used to make "full width" sections on a page.
.section {
  @include make-row();
}

// This is meant for a "wide" column (occupying the full width of the screen); should be used as child of "section";
// so it's used to make "full width" sections on a page.
.section-content {
  @include make-row();
}

// This is a "fixed" (constrained) container i.e. not the full width of the screen but responsive to te media size.
.content-container {
  @extend .container;
}

// This should be used as a child of "content-container"; i.e. NOT full-width but constrained/responsive
// (contrast with "section", see above).
.content-row {
  @include make-row();
}

.content-row-smaller {
  margin-left: 56px;
  margin-right: 56px;
}

// This should be used as a child of "content-row"; i.e. NOT full-width but constrained/responsive
// (contrast with "section-content", see above).
.content-col {
  @include make-sm-column(12,0);
}

.content-separator {
  border-bottom: 1px solid lightgrey;
  padding-bottom: 20px;
}

//.col-padding-extra {
//  padding-left: 8px;
//  padding-right: 8px;
//}
