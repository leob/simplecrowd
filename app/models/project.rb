class Project < ActiveRecord::Base
   belongs_to :user

   validates :name, presence: true, length: { maximum: 35 }
   validates :summary, presence: true, length: { maximum: 250 }
   validates :description, presence: true

   monetize :target_amount_cents, :collected_amount_cents

   has_attached_file :main_image, :styles => { :medium => "300x300>", :thumb => "100x100>" },
                     :default_url => "/images/:style/missing.png"

   validates_attachment :main_image, #:presence => true,
                        :content_type => {content_type: ["image/jpeg", "image/gif", "image/png"],
                                          message: ': ' + I18n.t('forms.errors.invalid_file_type')},
                        :size => {in: 0..1.megabytes,
                                  message: ': ' + I18n.t('forms.errors.invalid_file_size', size_mb: 8)}

   after_validation :clean_paperclip_errors

   #
   # Clean the validation errors generated by Paperclip, see:
   #
   # http://stackoverflow.com/questions/19933579/ruby-on-rails-4-duplicate-paperclip-validation-messages
   #
   def clean_paperclip_errors
      errors.delete(:main_image_file_size)
      errors.delete(:main_image_content_type)
   end

   # SCOPE METHODS

   def self.selected_projects(nr_projects)
      where(editor_pick: true, draft: false, disabled: false)
          .order(created_at: :desc)
          .limit(nr_projects)
   end

   # # Scopes
   # scope :editor_picks, -> {
   #                       where(editor_pick: true)
   #                           .order("updated_at DESC")
   # }

   #scope :by_name, -> { order("name ASC") }
end
